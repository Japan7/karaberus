name: Build and push image

on:
  push:
    branches: ["master", "renovate/*"]
  pull_request:
    branches: ["master"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install meson
        run: pip install meson

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libavcodec-dev libavutil-dev libavformat-dev ninja-build

      - name: Compile karaberus
        run: |
          meson setup build
          meson compile -C build

      - name: Setup S3 bucket
        run: docker run -d -e MINIO_DEFAULT_BUCKETS=test -p 9000:9000 bitnami/minio:latest

      - name: Run tests
        run: meson test -C build --verbose
        env:
          KARABERUS_S3_ENDPOINT: s3://localhost:9000/test
          KARABERUS_S3_KEYID: minio
          KARABERUS_S3_SECRET: miniosecret

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        config:
          - arch: x86_64
            chost: ""
            platform: linux/amd64
          - arch: aarch64
            chost: aarch64-chimera-linux-musl
            platform: linux/arm64
          - arch: riscv64
            chost: riscv64-chimera-linux-musl
            platform: linux/riscv64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=schedule

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          platforms: ${{ matrix.config.platform }}
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ github.sha }}-${{ matrix.config.arch }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: CHOST=${{ matrix.config.chost }}
          containerfiles: Containerfile

      - name: Push image
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  push_manifest:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Podman login
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: create and push manifest for supported platforms
        run: |
          image_base_raw=${{ env.IMAGE_NAME }}
          image_base=${image_base_raw@L}
          image_base_sha=${image_base_raw@L}:${{ github.sha }}
          podman manifest create $image_base
          podman pull ${{ env.REGISTRY }}/$image_base_sha-x86_64
          podman pull ${{ env.REGISTRY }}/$image_base_sha-aarch64
          podman pull ${{ env.REGISTRY }}/$image_base_sha-riscv64
          podman manifest add $image_base ${{ env.REGISTRY }}/$image_base_sha-x86_64
          podman manifest add $image_base ${{ env.REGISTRY }}/$image_base_sha-aarch64
          podman manifest add $image_base ${{ env.REGISTRY }}/$image_base_sha-riscv64
          podman manifest push $image_base ${{ env.REGISTRY }}/$image_base_sha

      - name: push branch manifest
        if: github.ref == 'refs/heads/master'
        run: |
          image_base_raw=${{ env.IMAGE_NAME }}
          image_base=${image_base_raw@L}
          podman manifest push $image_base ${{ env.REGISTRY }}/$image_base:${{ github.ref_name }}
